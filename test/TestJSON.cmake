function(test_JSON_format)
    JSON_format(ON _var1)
    JSON_format(true _var2)
    JSON_format(on _var3)
    JSON_format(TRUE _var4)
    assert_same(${_var1} true)
    assert_same(${_var2} true)
    assert_same(${_var3} true)
    assert_same(${_var4} true)

    JSON_format(OFF _var1)
    JSON_format(false _var2)
    JSON_format(off _var3)
    JSON_format(FALSE _var4)
    assert_same(${_var1} false)
    assert_same(${_var2} false)
    assert_same(${_var3} false)
    assert_same(${_var4} false)

    JSON_format(42 _var1)
    assert_same(${_var1} 42)
    JSON_format("four" _var2)
    JSON_format("" _var3)
    assert_same(${_var3} "\"\"")
    JSON_format("\"four\"" _var4)
    assert_same(${_var4} "\"four\"")
endfunction()

function(test_JSON_get)
    doxypress_project_load(DoxypressTest1.json)

    JSON_get("doxypress.source.suffix-exclude-navtree" _property)
    assert_list_contains("${_property}" txt)
    assert_list_contains("${_property}" doc)
    assert_list_contains("${_property}" md)
    assert_list_contains("${_property}" markdown)
    assert_list_contains("${_property}" dox)

    JSON_get("doxypress.source.inline-source" _property)
    assert_same("${_property}" false)
endfunction()

function(test_JSON_serialize)
    doxypress_project_load(${CMAKE_CURRENT_SOURCE_DIR}/DoxypressTest1.json)
    TPA_get(${_DOXYPRESS_PROJECT_KEY} _variables)
    set(_new_value x1 x2 x3)
    JSON_set("doxypress.source.suffix-exclude-navtree" "${_new_value}")
    JSON_set("doxypress.source.inline-source" true)
    set(input.input-source "include10;include11")
    doxypress_log(DEBUG "trying to override inputs via ${input.input-source}")
    JSON_serialize("${_variables}" _json_document)

    # re-parse without saving
    sbeParseJson(doxypress _json_document)
    foreach (_property ${doxypress})
        TPA_set(${_property} "${${_property}}")
    endforeach ()
    TPA_set(_DOXYPRESS_PROJECT_KEY "${doxypress}")
    JSON_get("doxypress.source.suffix-exclude-navtree" _new_value)
    assert_same("${_new_value}" "x1;x2;x3")
    JSON_get("doxypress.source.inline-source" _new_value)
    assert_same(${_new_value} true)
    JSON_get("doxypress.input.input-source" _input_source)
    assert_same("${_input_source}" "include2;include3")
endfunction()

function(test_JSON_set)
    doxypress_project_load(DoxypressTest1.json)
    set(_new_value x1 x2 x3)
    JSON_set("doxypress.source.suffix-exclude-navtree" "${_new_value}")
    JSON_set("doxypress.source.inline-source" true)
    JSON_set(OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
    doxypress_project_save(${CMAKE_CURRENT_BINARY_DIR}/doxypress.test.json)

    doxypress_project_load(${CMAKE_CURRENT_BINARY_DIR}/doxypress.test.json)
    JSON_get("doxypress.source.inline-source" _property)
    assert_same("${_property}" true)
    JSON_get("doxypress.source.suffix-exclude-navtree" _property)
    assert_list_contains("${_property}" x1)
    assert_list_contains("${_property}" x2)
endfunction()

# test_JSON_format()
# test_JSON_get()
# test_JSON_set()
test_JSON_serialize()
