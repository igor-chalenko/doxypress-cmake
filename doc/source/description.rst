.. _description:

Algorithm description
=====================

* The input JSON configuration is parsed into a flat list of variables as
  described in the documentation of `sbeParseJson` from json-cmake_;
* Some of these variables get new values following the logic described
  below;
* The list of variables is re-assembled back into a new JSON document, which
  is then written to a file that becomes the final Doxypress configuration.

The following properties are always set to a constant value:

* ``output-html.html-output`` = ``html``
* ``output-latex.latex-output`` = ``latex``
* ``output-xml.xml-output`` = ``xml``

   The author sees little value in customizing these since the base output
   directory is customizable.

* ``project.project-name`` = ``${PROJECT_NAME}``
* ``project.project-version`` = ``${PROJECT_VERSION}``
* ``project.project-brief`` = ``${PROJECT_DESCRIPTION}``

   These are specified in `CMakeLists.txt`; one doesn't have to maintain
   project nomenclature more times than needed.

* ``input.input-recursive`` = ``true``
* ``input.example-recursive`` = ``true``

   Default template generated by `Doxypress` sets these to ``false``, mimicking
   behaviour of `Doxygen`. The author believes the value of ``true`` is more
   appropriate, given the number of ``exclude`` options which allow to achieve
   the same result. One has to be able to freely expand/refactor existing
   source tree without worrying about breaking documentation.

* ``dot.have-dot``
* ``dot.dot-path``
* ``dot.dia-path``

   These properties depend on the local environment and thus should not be
   hard-coded.

* ``output-latex.latex-cmd-name`` = ``${PDFLATEX_COMPILER}``
* ``output-latex.make-index-cmd-name`` = ``${MAKEINDEX_COMPILER}``

   These properties depend on the local environment and thus should not be
   hard-coded. Note that if LaTex installation was not found after the call to
   ``find_package(LATEX)``, the corresponding properties are not defined and
   these properties are not replaced in the original JSON in this case.

* ``output-latex.latex-pdf`` = ``true``

   If `pdflatex` is installed, it will be used to get "a better quality PDF",
   as stated in `Doxypress` documentation (and originally in `Doxygen`'s).

* ``output-latex.latex-batch-mode`` = ``true``

   LaTex batch mode enables non-interactive processing, which is exactly what
   the package does.

* ``output-latex.latex-hyper-pdf`` = ``true``

   Hyperlink generation require running ``pdflatex`` several times, but these
   days it's not that expensive, while value of hyperlinks is great.

* ``messages.warn-format``

   This is configured separately for MS Visual Studio; other build tools
   use a default value.

The following properties are read from project file and then updated if
a corresponding CMake property is set to a non-empty value:

* ``general.output-dir``

   If a relative path is given (either by project file or by the user),
   ``${CMAKE_CURRENT_BINARY_DIR}`` is prepended to it. Output directory is
   deleted upon every `Doxypress` invocation that detected changes in the source
   files.
   Default value is ``doxypress-generated``.

The following array properties are treated specially:

* ``input.example-source``

   If an input parameter or an override CMake variable is defined, they are
   merged with the existing JSON value. If all of the above are empty,
   the package searches for directories [``example``, ``examples``] in
   the current project's directory (``${CMAKE_CURRENT_SOURCE_DIR}``). Any found
   directories are added to the list of this property's values.

* ``input.input-source``

   Input parameters ``INPUTS`` and ``INPUT_TARGET`` determine the contents of
   this property. Override is ignored. If the input project contains
   a non-empty values, it's merged with the
   If neither input parameters nor input
   JSON supply a non-empty value, an error is raised.
   # todo links to parameters

In order to update any other parameter, just set a `CMake` variable with a name
that corresponds to the property's JSON path. For example,

.. code-block:: cmake

   set(source.inline-source true)
   doxypress_add_docs()

.. _json-cmake: https://github.com/sbellus/json-cmake